(()=>{"use strict";console.log("🚀 CryptoTracker Loading...");!function(){const t=document.createElement("style");t.textContent="\n        *{box-sizing:border-box;margin:0;padding:0}\n        body{font-family:-apple-system,BlinkMacSystemFont,sans-serif;background:#0c0c0c;color:#fff;line-height:1.4;min-height:100vh}\n        .app-header{background:rgba(255,255,255,.05);backdrop-filter:blur(8px);border-bottom:1px solid rgba(255,255,255,.1);padding:16px 0;position:sticky;top:0;z-index:1000}\n        .header-content{max-width:1200px;margin:0 auto;padding:0 20px;display:flex;justify-content:space-between;align-items:center;gap:16px}\n        .app-title{color:#fff;font-size:1.6rem;font-weight:700;margin:0;display:flex;align-items:center;gap:8px}\n        .crypto-icon{font-size:1.8rem;color:#00d4ff}\n        .version{font-size:.7rem;background:#667eea;color:#fff;padding:2px 6px;border-radius:6px;font-weight:600}\n        .header-actions{display:flex;gap:8px;align-items:center}\n        .header-btn,.update-timer{background:rgba(255,255,255,.08);color:#fff;border:1px solid rgba(255,255,255,.1);padding:6px 10px;border-radius:8px;font-weight:600;font-size:.8rem;cursor:pointer;transition:all .1s ease}\n        .header-btn:hover{background:rgba(255,255,255,.12);color:#00d4ff}\n        .update-timer{cursor:default;font-family:monospace}\n        .countdown-display{color:#00d4ff;font-weight:700}\n        .countdown-display.warning{color:#f59e0b}\n        .countdown-display.critical{color:#ef4444}\n        .app-main{max-width:1200px;margin:0 auto;padding:20px}\n        .market-overview{background:rgba(255,255,255,.05);border:1px solid rgba(255,255,255,.1);border-radius:12px;padding:16px;margin-bottom:16px}\n        .overview-header{display:flex;justify-content:space-between;align-items:center;margin-bottom:12px}\n        .overview-title{color:#fff;font-size:1.2rem;font-weight:700;margin:0}\n        .last-updated{color:#b8c6db;font-size:.8rem;font-family:monospace}\n        .market-stats{display:grid;grid-template-columns:repeat(auto-fit,minmax(120px,1fr));gap:10px}\n        .stat-item{background:rgba(0,0,0,.2);border:1px solid rgba(255,255,255,.1);border-radius:8px;padding:10px;text-align:center}\n        .stat-label{display:block;color:#b8c6db;font-size:.7rem;font-weight:600;text-transform:uppercase;margin-bottom:4px}\n        .stat-value{color:#00d4ff;font-size:.9rem;font-weight:700;font-family:monospace}\n        .coin-list{display:grid;grid-template-columns:repeat(auto-fill,minmax(280px,1fr));gap:12px}\n        .coin-card{background:rgba(255,255,255,.05);border:1px solid rgba(255,255,255,.1);border-radius:12px;padding:12px;cursor:pointer;transition:all .1s ease;color:#fff;min-height:150px}\n        .coin-card:hover{transform:translateY(-1px);border-color:rgba(0,212,255,.3)}\n        .loading-spinner{width:30px;height:30px;border:2px solid rgba(0,212,255,.2);border-top:2px solid #00d4ff;border-radius:50%;animation:spin .8s linear infinite;margin:0 auto 12px}\n        @keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}\n        .market-analysis-bar{background:rgba(15,23,42,.4);border:1px solid rgba(148,163,184,.2);border-radius:12px;padding:16px;margin:16px 0}\n        .analysis-label{color:#00d4ff;font-size:.9rem;font-weight:700;margin-bottom:10px;text-transform:uppercase}\n        .analysis-buttons{display:flex;gap:6px;flex-wrap:wrap;margin-bottom:12px}\n        .analysis-btn{background:rgba(30,35,50,.6);color:#b8c6db;border:1px solid rgba(148,163,184,.2);border-radius:8px;padding:6px 10px;font-size:.7rem;font-weight:600;cursor:pointer;transition:all .1s ease;text-transform:uppercase}\n        .analysis-btn:hover{background:rgba(0,212,255,.1);color:#00d4ff;border-color:rgba(0,212,255,.3)}\n        .analysis-btn.active{background:#4facfe;color:#fff;border-color:rgba(0,212,255,.6)}\n        .sort-select{background:rgba(16,185,129,.15);color:#fff;border:2px solid rgba(16,185,129,.3);padding:8px 12px;border-radius:8px;font-size:.8rem;font-weight:600;cursor:pointer;min-width:180px;appearance:none;outline:none}\n        .sort-select:hover{background:rgba(16,185,129,.25);border-color:rgba(16,185,129,.6)}\n        .sort-select:focus{border-color:rgba(16,185,129,.8)}\n        .sort-select option{background:#1e2332;color:#fff;padding:8px;font-weight:600}\n        @media (max-width:768px){\n            .header-content{flex-direction:column;padding:0 16px}\n            .app-title{font-size:1.4rem}\n            .app-main{padding:16px}\n            .coin-list{grid-template-columns:1fr}\n            .market-stats{grid-template-columns:repeat(2,1fr)}\n            .analysis-buttons{flex-direction:column}\n            .sort-select{min-width:100%}\n        }\n    ",document.head.appendChild(t)}();class t{constructor(){this.coins=[],this.currentFilter="all",this.currentSort="rank",this.countdownTimer=60,this.isLoading=!1,this.maxDisplayCoins=10,this.modalUpdateInterval=null,this.currentModalCoin=null}async init(){console.log("🚀 Initializing Crypto App..."),this.loadData(),this.startSyncedCountdown(),this.setupEventListeners(),console.log("✅ App initialized")}setupEventListeners(){let t;window.addEventListener("resize",(()=>{clearTimeout(t),t=setTimeout((()=>{this.coins.length>0&&this.renderCoins()}),250)}),{passive:!0})}async loadData(){if(this.isLoading)return;this.isLoading=!0;const t=document.getElementById("coin-list-container"),e=document.getElementById("status");if(t&&e)try{0===this.coins.length&&(e.style.display="block",e.innerHTML='\n                    <div style="text-align:center;padding:30px;color:#b8c6db">\n                        <div class="loading-spinner"></div>\n                        <h3 style="color:#fff;font-size:1.1rem;margin:12px 0;font-weight:700">Loading Market Data</h3>\n                    </div>\n                ');const t=new AbortController,n=setTimeout((()=>t.abort()),5e3),o=await fetch("/api/crypto-data",{signal:t.signal,headers:{Accept:"application/json","Cache-Control":"no-cache"}});if(clearTimeout(n),!o.ok)throw new Error(`HTTP ${o.status}`);const i=await o.json();this.coins.length>0?(this.coins=i.data||[],this.updateMarketStats(),this.updateLastUpdated(),this.updateCoinPrices(),console.log("✅ Data updated silently")):(this.coins=i.data||[],this.updateMarketStats(),this.renderCoins(),this.updateLastUpdated(),e.style.display="none",console.log("✅ Initial data loaded:",this.coins.length,"coins"))}catch(t){console.error("❌ Error loading data:",t),0===this.coins.length&&(e.innerHTML='\n                    <div style="text-align:center;padding:30px;color:#ef4444">\n                        <h3 style="margin-bottom:8px">Connection Error</h3>\n                        <button onclick="location.reload()" style="padding:6px 12px;background:rgba(0,212,255,.2);border:1px solid #00d4ff;border-radius:6px;color:#00d4ff;cursor:pointer;font-weight:600">🔄 Retry</button>\n                    </div>\n                ')}finally{this.isLoading=!1}else this.isLoading=!1}updateCoinPrices(){this.coins.forEach(((t,e)=>{const n=document.querySelectorAll(".coin-card")[e];if(!n)return;const o=n.querySelector("[data-price]");o&&(o.textContent=`$${t.price.toFixed(2)}`);const i=n.querySelector("[data-change]");if(i){const e=t.percent_change_24h>0;i.textContent=`${e?"+":""}${t.percent_change_24h.toFixed(2)}%`,i.style.color=e?"#10b981":"#ef4444"}}))}updateMarketStats(){if(0===this.coins.length)return;const t=this.coins.reduce(((t,e)=>t+(e.market_cap||0)),0),e=this.coins.reduce(((t,e)=>t+(e.volume_24h||0)),0),n=this.coins.find((t=>"BTC"===t.symbol)),o=n&&t>0?(n.market_cap/t*100).toFixed(1):"0",i=this.coins.filter((t=>t.percent_change_24h>0)).length,r=this.coins.length>0?(i/this.coins.length*100).toFixed(0):"0",a={"total-market-cap":`$${(t/1e12).toFixed(2)}T`,"total-volume":`$${(e/1e9).toFixed(1)}B`,"btc-dominance":`${o}%`,"market-sentiment":`${r}%`,"active-coins":this.coins.length.toString(),"trending-up":i.toString()};Object.entries(a).forEach((([t,e])=>{const n=document.getElementById(t);n&&n.textContent!==e&&(n.textContent=e)}))}updateLastUpdated(){const t=document.getElementById("last-updated");if(t){const e=new Date;t.textContent=`Updated: ${e.toLocaleTimeString()}`}}startSyncedCountdown(){this.countdownInterval&&clearInterval(this.countdownInterval);const t=60-(new Date).getSeconds();this.countdownTimer=t,console.log(`⏰ Syncing with clock: ${t}s until next minute`),this.countdownInterval=setInterval((()=>{this.countdownTimer--;const t=document.getElementById("countdown-display");if(t&&(t.textContent=`${this.countdownTimer}s`,t.className="countdown-display "+(this.countdownTimer<=10?"critical":this.countdownTimer<=20?"warning":"")),this.countdownTimer<=0){const t=new Date;console.log(`🔄 Clock-synced update at ${t.toLocaleTimeString()}`),this.countdownTimer=60,this.loadData()}}),1e3),60===t&&this.loadData()}renderCoins(){const t=document.getElementById("coin-list-container");if(!t||0===this.coins.length)return;let e=this.filterCoins(this.coins,this.currentFilter);e=this.sortCoins(e,this.currentSort),window.innerWidth;const n=e.slice(0,this.maxDisplayCoins),o=e.length>this.maxDisplayCoins,i=document.createDocumentFragment(),r=document.createElement("div");r.style.cssText="margin-bottom:12px;padding:10px 12px;background:rgba(0,0,0,.3);border-radius:8px;display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;gap:8px";const a=e.filter((t=>t.percent_change_24h>0)).length,s=e.filter((t=>t.percent_change_24h<0)).length;r.innerHTML=`\n            <div style="display:flex;align-items:center;gap:12px;flex-wrap:wrap">\n                <span style="color:#b8c6db;font-size:.8rem">Showing <span style="color:#00d4ff;font-weight:700">${n.length}</span> of ${e.length}</span>\n                <span style="color:#10b981;font-size:.8rem">📈 ${a}</span>\n                <span style="color:#ef4444;font-size:.8rem">📉 ${s}</span>\n            </div>\n            ${o?`\n                <button id="load-more-btn" style="padding:6px 12px;background:linear-gradient(135deg,#00d4ff,#4facfe);border:none;border-radius:6px;color:#fff;cursor:pointer;font-size:.8rem;font-weight:600">\n                    Load More (${e.length-this.maxDisplayCoins})\n                </button>\n            `:""}\n        `,i.appendChild(r);const d=document.createElement("div");d.className="coin-list",n.forEach((t=>{const e=document.createElement("div");e.className="coin-card",e.addEventListener("click",(e=>{e.preventDefault(),e.stopPropagation(),this.showDetails(t.symbol)}));const n=t.percent_change_24h>0,o=n?"📈":"📉",i=n?"#10b981":"#ef4444";e.innerHTML=`\n                <div style="display:flex;justify-content:space-between;align-items:flex-start;margin-bottom:10px">\n                    <div style="flex:1">\n                        <h3 style="color:#fff;font-size:1rem;font-weight:700;margin:0 0 4px 0">${t.name}</h3>\n                        <span style="color:#00d4ff;font-size:.8rem;font-weight:600">${t.symbol}</span>\n                    </div>\n                    <div style="color:#b8c6db;font-size:.7rem">#${t.rank}</div>\n                </div>\n                <div data-price style="color:#fff;font-size:1.3rem;font-weight:800;margin:10px 0">$${t.price.toFixed(2)}</div>\n                <div data-change style="color:${i};font-weight:600;display:flex;align-items:center;gap:4px;margin-bottom:10px">\n                    <span>${o}</span>\n                    <span>${n?"+":""}${t.percent_change_24h.toFixed(2)}%</span>\n                </div>\n                <div style="display:grid;grid-template-columns:1fr 1fr;gap:6px">\n                    <div style="background:rgba(0,0,0,.2);padding:6px;border-radius:6px;text-align:center">\n                        <div style="color:#b8c6db;font-size:.6rem">Market Cap</div>\n                        <div style="color:#00d4ff;font-size:.7rem;font-weight:700">$${this.formatMarketCap(t.market_cap)}</div>\n                    </div>\n                    <div style="background:rgba(0,0,0,.2);padding:6px;border-radius:6px;text-align:center">\n                        <div style="color:#b8c6db;font-size:.6rem">Volume</div>\n                        <div style="color:#00d4ff;font-size:.7rem;font-weight:700">$${this.formatVolume(t.volume_24h)}</div>\n                    </div>\n                </div>\n            `,d.appendChild(e)})),i.appendChild(d),t.innerHTML="",t.appendChild(i);const l=document.getElementById("load-more-btn");l&&l.addEventListener("click",(t=>{t.preventDefault(),this.loadMoreCoins()}))}filterCoins(t,e){switch(e){case"high_momentum":return t.filter((t=>t.percent_change_24h>5));case"oversold":return t.filter((t=>(t.rsi||50)<30));case"overbought":return t.filter((t=>(t.rsi||50)>70));case"large_cap":return t.filter((t=>t.market_cap>1e10));case"mid_cap":return t.filter((t=>t.market_cap>1e9&&t.market_cap<=1e10));case"small_cap":return t.filter((t=>t.market_cap<=1e9));default:return t}}sortCoins(t,e){const n=[...t];switch(e){case"price":return n.sort(((t,e)=>e.price-t.price));case"change":return n.sort(((t,e)=>e.percent_change_24h-t.percent_change_24h));case"volume":return n.sort(((t,e)=>e.volume_24h-t.volume_24h));case"market_cap":return n.sort(((t,e)=>e.market_cap-t.market_cap));case"name":return n.sort(((t,e)=>t.name.localeCompare(e.name)));default:return n.sort(((t,e)=>t.rank-e.rank))}}filterByAnalysis(t){this.currentFilter=t,document.querySelectorAll(".analysis-btn").forEach((e=>{e.classList.remove("active"),e.getAttribute("data-filter")===t&&e.classList.add("active")})),this.renderCoins()}handleSortChange(){const t=document.getElementById("sort-select");t&&(this.currentSort=t.value,this.renderCoins())}loadMoreCoins(){const t=window.innerWidth<768?4:6;this.maxDisplayCoins+=t,this.renderCoins()}showDetails(t){const e=this.coins.find((e=>e.symbol===t));if(!e)return;this.currentModalCoin=e;const n=document.createElement("div");n.style.cssText="position:fixed;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,.9);display:flex;align-items:center;justify-content:center;z-index:10000;backdrop-filter:blur(8px)",n.id="coin-modal";const o=e.price_history||this.generatePriceHistory(e.price,30),i=e.volume_history||this.generateVolumeHistory(e.volume_24h,30),r=this.generateAdvancedChart(o,"price",e.percent_change_24h>0?"#10b981":"#ef4444"),a=this.generateVolumeChart(i,"#4facfe"),s=this.generateCandlestickChart(o,e.price),d=e.rank,l=(e.volume_24h/e.market_cap*100).toFixed(2),c=e.percent_change_7d||10*(Math.random()-.5),p=e.percent_change_30d||20*(Math.random()-.5),m=e.rsi||50+40*(Math.random()-.5),g=e.volatility_score||10*Math.random(),f=(e.liquidity_score||Math.random(),e.moving_avg_50||e.price*(.95+.1*Math.random())),h=e.moving_avg_200||e.price*(.9+.2*Math.random());n.innerHTML=`\n            <div style="background:linear-gradient(135deg,rgba(15,23,42,.98),rgba(30,41,59,.98));border:2px solid rgba(0,212,255,.3);border-radius:16px;padding:24px;max-width:900px;width:95%;max-height:85vh;overflow-y:auto;color:#fff;position:relative;box-shadow:0 25px 100px rgba(0,0,0,.8)">\n                \n                \x3c!-- Enhanced Header with Timer --\x3e\n                <div style="display:flex;justify-content:space-between;align-items:flex-start;margin-bottom:20px;padding-bottom:16px;border-bottom:1px solid rgba(0,212,255,.2)">\n                    <div style="display:flex;align-items:center;gap:16px;flex:1">\n                        <div style="width:48px;height:48px;background:linear-gradient(135deg,#00d4ff,#4facfe);border-radius:50%;display:flex;align-items:center;justify-content:center;font-size:1.2rem;font-weight:900;box-shadow:0 4px 16px rgba(0,212,255,.4)">${e.symbol.charAt(0)}</div>\n                        <div style="flex:1">\n                            <h2 style="font-size:1.6rem;font-weight:800;margin:0;background:linear-gradient(135deg,#fff,#00d4ff);background-clip:text;-webkit-background-clip:text;-webkit-text-fill-color:transparent">${e.name}</h2>\n                            <div style="display:flex;gap:12px;align-items:center;margin-top:6px;flex-wrap:wrap">\n                                <span style="color:#00d4ff;font-size:.85rem;font-weight:700;background:rgba(0,212,255,.15);padding:3px 8px;border-radius:8px;border:1px solid rgba(0,212,255,.3)">${e.symbol}</span>\n                                <span style="color:#b8c6db;font-size:.8rem">Rank #${e.rank}</span>\n                                <span style="color:${e.percent_change_24h>0?"#10b981":"#ef4444"};font-size:.8rem;font-weight:700;background:rgba(${e.percent_change_24h>0?"16,185,129":"239,68,68"},.15);padding:3px 6px;border-radius:6px">${e.percent_change_24h>0?"+":""}${e.percent_change_24h.toFixed(2)}%</span>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    \x3c!-- Modal Timer Display --\x3e\n                    <div style="display:flex;align-items:center;gap:12px">\n                        <div id="modal-update-timer" style="background:rgba(0,0,0,.3);border:1px solid rgba(255,255,255,.1);border-radius:8px;padding:8px 12px;font-size:.75rem;color:#b8c6db;font-family:monospace;display:flex;align-items:center;gap:6px">\n                            <span style="color:#00d4ff">⏱️</span>\n                            <span>Next update: <span id="modal-countdown-display" style="color:#00d4ff;font-weight:700">${this.countdownTimer}s</span></span>\n                        </div>\n                        <button id="modal-close-btn" style="background:rgba(239,68,68,.2);border:1px solid rgba(239,68,68,.4);color:#ef4444;cursor:pointer;padding:8px;border-radius:50%;width:36px;height:36px;display:flex;align-items:center;justify-content:center;font-size:16px;font-weight:700;transition:all .3s ease;z-index:10">✕</button>\n                    </div>\n                </div>\n\n                \x3c!-- Live Price Display --\x3e\n                <div style="text-align:center;margin-bottom:20px">\n                    <div id="modal-live-price" style="color:#00d4ff;font-size:2.5rem;font-weight:900;font-family:monospace">$${this.formatPrice(e.price)}</div>\n                    <div style="color:#b8c6db;font-size:.8rem;margin-top:2px">Live Price • Last updated: <span id="modal-last-updated">${(new Date).toLocaleTimeString()}</span></div>\n                </div>\n\n                \x3c!-- Compact Price Changes --\x3e\n                <div id="modal-price-changes" style="display:grid;grid-template-columns:repeat(auto-fit,minmax(100px,1fr));gap:12px;margin-bottom:20px">\n                    <div style="text-align:center;padding:12px;background:rgba(0,0,0,.3);border-radius:10px;border:1px solid rgba(255,255,255,.1)">\n                        <div style="color:#b8c6db;font-size:.7rem;text-transform:uppercase;margin-bottom:4px;font-weight:600">24H</div>\n                        <div id="modal-change-24h" style="color:${e.percent_change_24h>0?"#10b981":"#ef4444"};font-weight:800;font-size:.9rem">${e.percent_change_24h>0?"+":""}${e.percent_change_24h.toFixed(2)}%</div>\n                    </div>\n                    <div style="text-align:center;padding:12px;background:rgba(0,0,0,.3);border-radius:10px;border:1px solid rgba(255,255,255,.1)">\n                        <div style="color:#b8c6db;font-size:.7rem;text-transform:uppercase;margin-bottom:4px;font-weight:600">7D</div>\n                        <div id="modal-change-7d" style="color:${c>0?"#10b981":"#ef4444"};font-weight:800;font-size:.9rem">${c>0?"+":""}${c.toFixed(2)}%</div>\n                    </div>\n                    <div style="text-align:center;padding:12px;background:rgba(0,0,0,.3);border-radius:10px;border:1px solid rgba(255,255,255,.1)">\n                        <div style="color:#b8c6db;font-size:.7rem;text-transform:uppercase;margin-bottom:4px;font-weight:600">30D</div>\n                        <div id="modal-change-30d" style="color:${p>0?"#10b981":"#ef4444"};font-weight:800;font-size:.9rem">${p>0?"+":""}${p.toFixed(2)}%</div>\n                    </div>\n                    <div style="text-align:center;padding:12px;background:rgba(0,0,0,.3);border-radius:10px;border:1px solid rgba(255,255,255,.1)">\n                        <div style="color:#b8c6db;font-size:.7rem;text-transform:uppercase;margin-bottom:4px;font-weight:600">Volume</div>\n                        <div id="modal-volume" style="color:#4facfe;font-weight:800;font-size:.9rem">$${this.formatVolume(e.volume_24h)}</div>\n                    </div>\n                    <div style="text-align:center;padding:12px;background:rgba(0,0,0,.3);border-radius:10px;border:1px solid rgba(255,255,255,.1)">\n                        <div style="color:#b8c6db;font-size:.7rem;text-transform:uppercase;margin-bottom:4px;font-weight:600">Market Cap</div>\n                        <div id="modal-market-cap" style="color:#4facfe;font-weight:800;font-size:.9rem">$${this.formatMarketCap(e.market_cap)}</div>\n                    </div>\n                </div>\n\n                \x3c!-- Chart Section with Proper Sizing --\x3e\n                <div style="margin-bottom:24px">\n                    <div style="display:flex;gap:8px;margin-bottom:12px;justify-content:center">\n                        <button id="price-chart-btn" style="background:rgba(0,212,255,.3);border:1px solid rgba(0,212,255,.5);color:#00d4ff;padding:8px 16px;border-radius:8px;cursor:pointer;font-size:.8rem;font-weight:700;transition:all .3s">\n                            📈 Price Chart\n                        </button>\n                        <button id="candlestick-chart-btn" style="background:rgba(255,255,255,.1);border:1px solid rgba(255,255,255,.2);color:#fff;padding:8px 16px;border-radius:8px;cursor:pointer;font-size:.8rem;font-weight:700;transition:all .3s">\n                            🕯️ Candlestick\n                        </button>\n                        <button id="volume-chart-btn" style="background:rgba(255,255,255,.1);border:1px solid rgba(255,255,255,.2);color:#fff;padding:8px 16px;border-radius:8px;cursor:pointer;font-size:.8rem;font-weight:700;transition:all .3s">\n                            📊 Volume\n                        </button>\n                    </div>\n                    <div id="chart-container" style="background:rgba(0,0,0,.4);border:1px solid rgba(255,255,255,.15);border-radius:12px;padding:16px;height:250px;position:relative;overflow:hidden;margin:0 auto;max-width:100%">\n                        ${r}\n                    </div>\n                </div>\n\n                \x3c!-- Organized Technical Indicators --\x3e\n                <div style="margin-bottom:24px">\n                    <h3 style="color:#00d4ff;font-size:1.1rem;font-weight:800;margin-bottom:16px;text-transform:uppercase;letter-spacing:.05em">📊 Technical Analysis</h3>\n                    \n                    <div id="modal-technical-indicators" style="display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));gap:16px">\n                        \x3c!-- RSI Indicator --\x3e\n                        <div style="background:rgba(0,0,0,.3);padding:16px;border-radius:12px;border:1px solid rgba(255,255,255,.1)">\n                            <div style="display:flex;justify-content:space-between;align-items:center;margin-bottom:10px">\n                                <h4 style="color:#b8c6db;font-size:.8rem;margin:0;text-transform:uppercase;font-weight:700">RSI (14)</h4>\n                                <span id="modal-rsi-status" style="color:${m>70?"#ef4444":m<30?"#10b981":"#f59e0b"};font-size:.7rem;font-weight:700;background:rgba(${m>70?"239,68,68":m<30?"16,185,129":"245,158,11"},.2);padding:2px 6px;border-radius:4px">\n                                    ${m>70?"Overbought":m<30?"Oversold":"Neutral"}\n                                </span>\n                            </div>\n                            <div id="modal-rsi-value" style="font-size:1.4rem;font-weight:900;color:#fff;margin-bottom:12px">${m.toFixed(1)}</div>\n                            <div style="width:100%;height:6px;background:rgba(255,255,255,.1);border-radius:3px;overflow:hidden;position:relative">\n                                <div id="modal-rsi-bar" style="width:${m}%;height:100%;background:linear-gradient(90deg,#10b981,#f59e0b,#ef4444);border-radius:3px;transition:width .5s ease"></div>\n                                <div style="position:absolute;left:30%;top:0;width:1px;height:100%;background:rgba(16,185,129,.8)"></div>\n                                <div style="position:absolute;left:70%;top:0;width:1px;height:100%;background:rgba(239,68,68,.8)"></div>\n                            </div>\n                        </div>\n                        \n                        \x3c!-- Volatility Score --\x3e\n                        <div style="background:rgba(0,0,0,.3);padding:16px;border-radius:12px;border:1px solid rgba(255,255,255,.1)">\n                            <h4 style="color:#b8c6db;font-size:.8rem;margin:0 0 10px 0;text-transform:uppercase;font-weight:700">Volatility</h4>\n                            <div id="modal-volatility-value" style="font-size:1.4rem;font-weight:900;color:#fff;margin-bottom:12px">${g.toFixed(1)}/10</div>\n                            <div style="width:100%;height:6px;background:rgba(255,255,255,.1);border-radius:3px;overflow:hidden">\n                                <div id="modal-volatility-bar" style="width:${g/10*100}%;height:100%;background:linear-gradient(90deg,#10b981,#f59e0b,#ef4444);border-radius:3px;transition:width .5s ease"></div>\n                            </div>\n                        </div>\n                        \n                        \x3c!-- Moving Averages --\x3e\n                        <div style="background:rgba(0,0,0,.3);padding:16px;border-radius:12px;border:1px solid rgba(255,255,255,.1)">\n                            <h4 style="color:#b8c6db;font-size:.8rem;margin:0 0 12px 0;text-transform:uppercase;font-weight:700">Moving Averages</h4>\n                            <div style="display:flex;justify-content:space-between;margin-bottom:6px">\n                                <span style="color:#b8c6db;font-size:.75rem">MA(20)</span>\n                                <span id="modal-ma20" style="color:${e.price>f?"#10b981":"#ef4444"};font-weight:700;font-size:.75rem">$${f.toFixed(2)}</span>\n                            </div>\n                            <div style="display:flex;justify-content:space-between">\n                                <span style="color:#b8c6db;font-size:.75rem">MA(50)</span>\n                                <span id="modal-ma50" style="color:${e.price>h?"#10b981":"#ef4444"};font-weight:700;font-size:.75rem">$${h.toFixed(2)}</span>\n                            </div>\n                        </div>\n                        \n                        \x3c!-- Support & Resistance --\x3e\n                        <div style="background:rgba(0,0,0,.3);padding:16px;border-radius:12px;border:1px solid rgba(255,255,255,.1)">\n                            <h4 style="color:#b8c6db;font-size:.8rem;margin:0 0 12px 0;text-transform:uppercase;font-weight:700">Key Levels</h4>\n                            <div style="display:flex;justify-content:space-between;margin-bottom:6px">\n                                <span style="color:#ef4444;font-size:.75rem">Resistance</span>\n                                <span id="modal-resistance" style="color:#fff;font-weight:700;font-size:.75rem">$${(1.08*e.price).toFixed(2)}</span>\n                            </div>\n                            <div style="display:flex;justify-content:space-between">\n                                <span style="color:#10b981;font-size:.75rem">Support</span>\n                                <span id="modal-support" style="color:#fff;font-weight:700;font-size:.75rem">$${(.92*e.price).toFixed(2)}</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                \x3c!-- Compact Market Data --\x3e\n                <div style="margin-bottom:20px">\n                    <h3 style="color:#00d4ff;font-size:1.1rem;font-weight:800;margin-bottom:16px;text-transform:uppercase;letter-spacing:.05em">💼 Market Information</h3>\n                    <div id="modal-market-data" style="display:grid;grid-template-columns:repeat(auto-fit,minmax(180px,1fr));gap:12px">\n                        <div style="background:rgba(0,0,0,.3);padding:14px;border-radius:10px;border:1px solid rgba(255,255,255,.1)">\n                            <div style="color:#b8c6db;font-size:.7rem;margin-bottom:6px;text-transform:uppercase;font-weight:600">Market Cap</div>\n                            <div id="modal-market-cap-detail" style="color:#fff;font-weight:800;font-size:1rem;margin-bottom:3px">$${this.formatMarketCap(e.market_cap)}</div>\n                            <div style="color:#b8c6db;font-size:.65rem">Rank #${d}</div>\n                        </div>\n                        <div style="background:rgba(0,0,0,.3);padding:14px;border-radius:10px;border:1px solid rgba(255,255,255,.1)">\n                            <div style="color:#b8c6db;font-size:.7rem;margin-bottom:6px;text-transform:uppercase;font-weight:600">24h Volume</div>\n                            <div id="modal-volume-detail" style="color:#fff;font-weight:800;font-size:1rem;margin-bottom:3px">$${this.formatVolume(e.volume_24h)}</div>\n                            <div style="color:#b8c6db;font-size:.65rem">${l}% of MCap</div>\n                        </div>\n                        <div style="background:rgba(0,0,0,.3);padding:14px;border-radius:10px;border:1px solid rgba(255,255,255,.1)">\n                            <div style="color:#b8c6db;font-size:.7rem;margin-bottom:6px;text-transform:uppercase;font-weight:600">Circulating Supply</div>\n                            <div style="color:#fff;font-weight:800;font-size:1rem;margin-bottom:3px">${this.formatVolume(e.circulating_supply)}</div>\n                            <div style="color:#b8c6db;font-size:.65rem">${e.symbol}</div>\n                        </div>\n                        ${e.max_supply?`\n                        <div style="background:rgba(0,0,0,.3);padding:14px;border-radius:10px;border:1px solid rgba(255,255,255,.1)">\n                            <div style="color:#b8c6db;font-size:.7rem;margin-bottom:6px;text-transform:uppercase;font-weight:600">Max Supply</div>\n                            <div style="color:#fff;font-weight:800;font-size:1rem;margin-bottom:3px">${this.formatVolume(e.max_supply)}</div>\n                            <div style="color:#b8c6db;font-size:.65rem">${(e.circulating_supply/e.max_supply*100).toFixed(1)}% issued</div>\n                        </div>\n                        `:""}\n                    </div>\n                </div>\n\n                \x3c!-- Compact Action Buttons --\x3e\n                <div style="display:flex;gap:10px;justify-content:center;padding-top:16px;border-top:1px solid rgba(255,255,255,.1);flex-wrap:wrap">\n                    <button onclick="alert('Watchlist feature coming soon!')" style="background:linear-gradient(135deg,#4facfe,#00f2fe);border:none;color:#fff;padding:10px 20px;border-radius:10px;font-weight:700;cursor:pointer;transition:all .3s ease;font-size:.85rem">\n                        ⭐ Watchlist\n                    </button>\n                    <button onclick="alert('Price alerts coming soon!')" style="background:linear-gradient(135deg,#667eea,#764ba2);border:none;color:#fff;padding:10px 20px;border-radius:10px;font-weight:700;cursor:pointer;transition:all .3s ease;font-size:.85rem">\n                        🔔 Alert\n                    </button>\n                    <button onclick="window.open('https://coinmarketcap.com/currencies/${e.name.toLowerCase().replace(/\s+/g,"-")}/', '_blank')" style="background:rgba(255,255,255,.15);border:1px solid rgba(255,255,255,.3);color:#fff;padding:10px 20px;border-radius:10px;font-weight:700;cursor:pointer;transition:all .3s ease;font-size:.85rem">\n                        📊 Details\n                    </button>\n                </div>\n            </div>\n        `,document.body.appendChild(n),this.startModalUpdateTimer();const x=document.getElementById("chart-container"),u=document.getElementById("price-chart-btn"),b=document.getElementById("candlestick-chart-btn"),y=document.getElementById("volume-chart-btn"),v=t=>{[u,b,y].forEach((t=>{t&&(t.style.background="rgba(255,255,255,.1)",t.style.borderColor="rgba(255,255,255,.2)",t.style.color="#fff")})),t.style.background="rgba(0,212,255,.3)",t.style.borderColor="rgba(0,212,255,.5)",t.style.color="#00d4ff"};let $="price";u&&x&&u.addEventListener("click",(()=>{$="price",x.innerHTML=r,v(u)})),b&&x&&b.addEventListener("click",(()=>{$="candlestick",x.innerHTML=s,v(b)})),y&&x&&y.addEventListener("click",(()=>{$="volume",x.innerHTML=a,v(y)})),window.refreshModalChart=()=>{if(!this.currentModalCoin||!x)return;const t=this.coins.find((t=>t.symbol===this.currentModalCoin.symbol));if(!t)return;this.currentModalCoin=t;const e=t.price_history||[],n=t.volume_history||[],o=e.length>5?e:this.generatePriceHistory(t.price,30),i=n.length>5?n:this.generateVolumeHistory(t.volume_24h,30);switch(console.log(`📊 Refreshing ${$} chart for ${t.symbol} with ${o.length} data points`),$){case"price":x.innerHTML=this.generateAdvancedChart(o,"price",t.percent_change_24h>0?"#10b981":"#ef4444");break;case"candlestick":x.innerHTML=this.generateCandlestickChart(o,t.price);break;case"volume":x.innerHTML=this.generateVolumeChart(i,"#4facfe")}};const w=document.createElement("style");w.textContent="\n            #price-chart-btn:hover,\n            #candlestick-chart-btn:hover,\n            #volume-chart-btn:hover {\n                background: rgba(0,212,255,.2) !important;\n                border-color: rgba(0,212,255,.4) !important;\n                transform: translateY(-1px);\n            }\n        ",document.head.appendChild(w);const k=document.getElementById("modal-close-btn");k&&k.addEventListener("click",(t=>{t.preventDefault(),t.stopPropagation(),this.stopModalUpdateTimer(),n.remove(),w.remove(),this.currentModalCoin=null})),n.addEventListener("click",(t=>{t.target===n&&(this.stopModalUpdateTimer(),n.remove(),w.remove(),this.currentModalCoin=null)}));const M=t=>{"Escape"===t.key&&(this.stopModalUpdateTimer(),n.remove(),w.remove(),document.removeEventListener("keydown",M),this.currentModalCoin=null)};document.addEventListener("keydown",M)}startModalUpdateTimer(){this.modalUpdateInterval&&clearInterval(this.modalUpdateInterval),this.modalUpdateInterval=setInterval((()=>{const t=document.getElementById("modal-countdown-display");t&&(t.textContent=`${this.countdownTimer}s`,t.className=this.countdownTimer<=10?"critical":this.countdownTimer<=20?"warning":"",1===this.countdownTimer&&setTimeout((()=>this.updateModalData()),100))}),1e3)}stopModalUpdateTimer(){this.modalUpdateInterval&&(clearInterval(this.modalUpdateInterval),this.modalUpdateInterval=null)}updateModalData(){if(!this.currentModalCoin)return;const t=this.coins.find((t=>t.symbol===this.currentModalCoin.symbol));if(!t)return;this.currentModalCoin=t;const e=document.getElementById("modal-live-price");e&&(e.textContent=`$${this.formatPrice(t.price)}`);const n=document.getElementById("modal-last-updated");n&&(n.textContent=(new Date).toLocaleTimeString());const o=document.getElementById("modal-change-24h");if(o){const e=t.percent_change_24h>0;o.textContent=`${e?"+":""}${t.percent_change_24h.toFixed(2)}%`,o.style.color=e?"#10b981":"#ef4444"}const i=document.getElementById("modal-volume");i&&(i.textContent=`$${this.formatVolume(t.volume_24h)}`);const r=document.getElementById("modal-market-cap");r&&(r.textContent=`$${this.formatMarketCap(t.market_cap)}`);const a=document.getElementById("modal-rsi-value"),s=document.getElementById("modal-rsi-bar");a&&s&&t.rsi&&(a.textContent=t.rsi.toFixed(1),s.style.width=`${t.rsi}%`);const d=document.getElementById("modal-volatility-value"),l=document.getElementById("modal-volatility-bar");d&&l&&t.volatility_score&&(d.textContent=`${t.volatility_score.toFixed(1)}/10`,l.style.width=t.volatility_score/10*100+"%");const c=document.getElementById("modal-ma20"),p=document.getElementById("modal-ma50");c&&t.moving_avg_50&&(c.textContent=`$${t.moving_avg_50.toFixed(2)}`,c.style.color=t.price>t.moving_avg_50?"#10b981":"#ef4444"),p&&t.moving_avg_200&&(p.textContent=`$${t.moving_avg_200.toFixed(2)}`,p.style.color=t.price>t.moving_avg_200?"#10b981":"#ef4444"),window.refreshModalChart&&window.refreshModalChart()}generateAdvancedChart(t,e="price",n="#00d4ff"){if(t.length<2)return'<div style="display:flex;align-items:center;justify-content:center;height:100%;color:#b8c6db;font-size:0.9rem">📈 No chart data available</div>';const o=Math.max(...t)-Math.min(...t),i=t.reduce(((t,e)=>t+e),0)/t.length,r=o<.001*i;let a=t;if(r){console.log(`⚠️ Detected flat price data for chart, generating variations. Range: ${o}, Avg: ${i}`);const e=t[t.length-1];a=this.generatePriceHistory(e,t.length)}const s=Math.min(...a),d=Math.max(...a),l=d-s,c=Math.max(.002*s,.01),p=Math.max(l,c),m=l<c?s-c/2:s,g=l<c?d+c/2:d,f=a.map(((t,e)=>({x:50+e/(a.length-1)*700,y:200-(t-m)/p*150,price:t}))),h=f.reduce(((t,e,n)=>{if(0===n)return`M ${e.x} ${e.y}`;const o=f[n-1];return`${t} C ${o.x+.25*(e.x-o.x)} ${o.y}, ${o.x+.75*(e.x-o.x)} ${e.y}, ${e.x} ${e.y}`}),""),x=`gradient-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,u=`glow-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,b=[];for(let t=0;t<=5;t++){const e=50+t/5*150,n=g-t/5*p;b.push({y:e,value:n})}const y=(new Date).toLocaleTimeString(),v=r?"Generated":"Live";return`\n            <svg width="100%" height="100%" viewBox="0 0 800 250" style="position:absolute;top:0;left:0;right:0;bottom:0" preserveAspectRatio="xMidYMid meet">\n                <defs>\n                    <linearGradient id="${x}" x1="0%" y1="0%" x2="0%" y2="100%">\n                        <stop offset="0%" style="stop-color:${n};stop-opacity:0.8" />\n                        <stop offset="40%" style="stop-color:${n};stop-opacity:0.4" />\n                        <stop offset="80%" style="stop-color:${n};stop-opacity:0.1" />\n                        <stop offset="100%" style="stop-color:${n};stop-opacity:0.05" />\n                    </linearGradient>\n                    \n                    <filter id="${u}" x="-50%" y="-50%" width="200%" height="200%">\n                        <feGaussianBlur stdDeviation="3" result="coloredBlur"/>\n                        <feMerge> \n                            <feMergeNode in="coloredBlur"/>\n                            <feMergeNode in="SourceGraphic"/>\n                        </feMerge>\n                    </filter>\n                </defs>\n                \n                <rect width="100%" height="100%" fill="rgba(0,0,0,0.1)" rx="12"/>\n                \n                ${b.map((t=>`\n                    <line x1="50" y1="${t.y}" x2="750" y2="${t.y}" \n                          stroke="rgba(255,255,255,0.08)" stroke-width="1" stroke-dasharray="4,4"/>\n                    <text x="42" y="${t.y+4}" fill="rgba(255,255,255,0.4)" \n                          font-size="12" font-family="monospace" text-anchor="end">\n                          $${this.formatPrice(t.value)}\n                    </text>\n                `)).join("")}\n                \n                \x3c!-- Fill area under curve --\x3e\n                <path d="${h} L ${f[f.length-1].x} 200 L ${f[0].x} 200 Z"\n                      fill="url(#${x})" opacity="0.7"/>\n                \n                \x3c!-- Main line --\x3e\n                <path d="${h}" \n                      fill="none" \n                      stroke="${n}" \n                      stroke-width="3" \n                      stroke-linecap="round" \n                      stroke-linejoin="round"\n                      filter="url(#${u})"/>\n                \n                \x3c!-- Data points showing actual values --\x3e\n                ${f.filter(((t,e)=>e%Math.max(1,Math.floor(f.length/8))===0)).map(((t,e)=>`\n                    <circle cx="${t.x}" cy="${t.y}" r="4" fill="${n}" opacity="0.9">\n                        <animate attributeName="r" values="4;6;4" dur="2s" repeatCount="indefinite" begin="${.3*e}s"/>\n                    </circle>\n                `)).join("")}\n                \n                \x3c!-- Current price indicator with actual value --\x3e\n                <circle cx="${f[f.length-1].x}" cy="${f[f.length-1].y}" r="6" \n                        fill="${n}" opacity="1" filter="url(#${u})">\n                    <animate attributeName="r" values="6;8;6" dur="1.5s" repeatCount="indefinite"/>\n                </circle>\n                \n                \x3c!-- Chart title with data quality indicator --\x3e\n                <text x="400" y="25" fill="rgba(255,255,255,0.8)" font-size="14" font-weight="bold" \n                      text-anchor="middle" font-family="Inter, sans-serif">\n                      ${v} Price Chart (${a.length} points)\n                </text>\n                \n                \x3c!-- Current price label with actual value --\x3e\n                <g transform="translate(${f[f.length-1].x}, ${f[f.length-1].y})">\n                    <rect x="8" y="-10" width="90" height="20" fill="rgba(0,0,0,0.9)" rx="4"/>\n                    <text x="53" y="4" fill="${n}" font-size="12" font-weight="bold" \n                          text-anchor="middle" font-family="monospace">\n                          $${this.formatPrice(f[f.length-1].price)}\n                    </text>\n                </g>\n                \n                \x3c!-- Real-time update indicator with data quality --\x3e\n                <text x="750" y="240" fill="rgba(255,255,255,0.5)" font-size="10" \n                      text-anchor="end" font-family="monospace">\n                      ${v} • Updated: ${y} • Range: ${this.formatPrice(p)}\n                </text>\n                \n                \x3c!-- Live data indicator --\x3e\n                <circle cx="780" cy="20" r="3" fill="${r?"#f59e0b":"#10b981"}" opacity="0.9">\n                    <animate attributeName="opacity" values="0.9;0.3;0.9" dur="2s" repeatCount="indefinite"/>\n                </circle>\n                <text x="765" y="25" fill="${r?"#f59e0b":"#10b981"}" font-size="10" font-family="monospace" text-anchor="end">${v.toUpperCase()}</text>\n            </svg>\n        `}generateCandlestickChart(t,e){const n=Math.min(20,t.length),o=t.length>=n?t.slice(-n):t,i=o.map(((t,e)=>{const n=e>0?o[e-1]:t,i=t-n,r=n,a=t,s=(Math.abs(i)+.005*t)*(.5+.5*Math.random()),d=Math.max(r,a)+s,l=Math.min(r,a)-s;return{open:Math.max(.01,r),high:Math.max(.01,d),low:Math.max(.01,l),close:Math.max(.01,a),volume:1e6*Math.random()}})),r=i.flatMap((t=>[t.open,t.high,t.low,t.close])),a=.995*Math.min(...r),s=1.005*Math.max(...r),d=s-a,l=Math.max(8,700/n*.7),c=700/n,p=(new Date).toLocaleTimeString();return`\n            <svg width="100%" height="100%" viewBox="0 0 800 250" style="position:absolute;top:0;left:0;right:0;bottom:0" preserveAspectRatio="xMidYMid meet">\n                <defs>\n                    <linearGradient id="bullishGrad" x1="0%" y1="0%" x2="0%" y2="100%">\n                        <stop offset="0%" style="stop-color:#10b981;stop-opacity:1" />\n                        <stop offset="100%" style="stop-color:#059669;stop-opacity:1" />\n                    </linearGradient>\n                    \n                    <linearGradient id="bearishGrad" x1="0%" y1="0%" x2="0%" y2="100%">\n                        <stop offset="0%" style="stop-color:#ef4444;stop-opacity:1" />\n                        <stop offset="100%" style="stop-color:#dc2626;stop-opacity:1" />\n                    </linearGradient>\n                </defs>\n                \n                <rect width="100%" height="100%" fill="rgba(0,0,0,0.1)" rx="12"/>\n                \n                \x3c!-- Grid lines based on actual price range --\x3e\n                ${Array.from({length:5},((t,e)=>{const n=50+e/4*150,o=s-e/4*d;return`\n                        <line x1="50" y1="${n}" x2="750" y2="${n}" \n                              stroke="rgba(255,255,255,0.08)" stroke-width="1" stroke-dasharray="3,3"/>\n                        <text x="42" y="${n+4}" fill="rgba(255,255,255,0.5)" \n                              font-size="11" font-family="monospace" text-anchor="end">\n                              $${this.formatPrice(o)}\n                        </text>\n                    `})).join("")}\n                \n                ${i.map(((t,e)=>{const n=50+(e+.5)*c,o=200-(t.open-a)/d*150,i=200-(t.close-a)/d*150,r=200-(t.high-a)/d*150,s=200-(t.low-a)/d*150,p=t.close>t.open,m=p?"#10b981":"#ef4444",g=p?"bullishGrad":"bearishGrad",f=Math.min(o,i),h=Math.max(2,Math.abs(o-i));return`\n                        \x3c!-- Wick --\x3e\n                        <line x1="${n}" y1="${r}" x2="${n}" y2="${s}" \n                              stroke="${m}" stroke-width="2" opacity="0.8" \n                              stroke-linecap="round"/>\n                        \n                        \x3c!-- Body --\x3e\n                        <rect x="${n-l/2}" y="${f}" width="${l}" height="${h}" \n                              fill="url(#${g})" \n                              stroke="${m}" stroke-width="1" rx="1" opacity="0.9">\n                            <animate attributeName="opacity" values="0;0.9" dur="0.5s" begin="${.05*e}s"/>\n                        </rect>\n                        \n                        \x3c!-- Tooltip area --\x3e\n                        <rect x="${n-c/2}" y="50" width="${c}" height="150" \n                              fill="transparent">\n                            <title>Period ${e+1}&#10;Open: $${this.formatPrice(t.open)}&#10;High: $${this.formatPrice(t.high)}&#10;Low: $${this.formatPrice(t.low)}&#10;Close: $${this.formatPrice(t.close)}&#10;Change: ${((t.close-t.open)/t.open*100).toFixed(2)}%</title>\n                        </rect>\n                    `})).join("")}\n                \n                <text x="400" y="25" fill="rgba(255,255,255,0.8)" font-size="14" font-weight="bold" \n                      text-anchor="middle" font-family="Inter, sans-serif">\n                      Live Candlestick Chart (${n} periods)\n                </text>\n                \n                \x3c!-- Real-time update indicator --\x3e\n                <text x="750" y="240" fill="rgba(255,255,255,0.5)" font-size="10" \n                      text-anchor="end" font-family="monospace">\n                      Updated: ${p} | Based on ${o.length} price points\n                </text>\n                \n                \x3c!-- Live data indicator --\x3e\n                <circle cx="780" cy="20" r="3" fill="#10b981" opacity="0.9">\n                    <animate attributeName="opacity" values="0.9;0.3;0.9" dur="2s" repeatCount="indefinite"/>\n                </circle>\n                <text x="765" y="25" fill="#10b981" font-size="10" font-family="monospace" text-anchor="end">LIVE</text>\n            </svg>\n        `}generateVolumeChart(t,e="#4facfe"){if(t.length<2)return'<div style="display:flex;align-items:center;justify-content:center;height:100%;color:#b8c6db;font-size:0.9rem">📊 No volume data available</div>';const n=t,o=Math.max(...n),i=Math.min(...n),r=o-i||.1*o,a=Math.max(3,700/n.length*.8),s=700/n.length,d=`volumeGrad-${Date.now()}`,l=(new Date).toLocaleTimeString();return`\n            <svg width="100%" height="100%" viewBox="0 0 800 250" style="position:absolute;top:0;left:0;right:0;bottom:0" preserveAspectRatio="xMidYMid meet">\n                <defs>\n                    <linearGradient id="${d}" x1="0%" y1="0%" x2="0%" y2="100%">\n                        <stop offset="0%" style="stop-color:${e};stop-opacity:0.9" />\n                        <stop offset="50%" style="stop-color:${e};stop-opacity:0.7" />\n                        <stop offset="100%" style="stop-color:${e};stop-opacity:0.4" />\n                    </linearGradient>\n                </defs>\n                \n                <rect width="100%" height="100%" fill="rgba(0,0,0,0.1)" rx="12"/>\n                \n                \x3c!-- Grid lines based on actual volume range --\x3e\n                ${Array.from({length:5},((t,e)=>{const n=50+e/4*150,i=o-e/4*r;return`\n                        <line x1="50" y1="${n}" x2="750" y2="${n}" \n                              stroke="rgba(255,255,255,0.08)" stroke-width="1" stroke-dasharray="3,3"/>\n                        <text x="42" y="${n+4}" fill="rgba(255,255,255,0.5)" \n                              font-size="11" font-family="monospace" text-anchor="end">\n                              ${this.formatVolume(i)}\n                        </text>\n                    `})).join("")}\n                \n                \x3c!-- Volume bars representing actual data --\x3e\n                ${n.map(((t,e)=>{const n=50+e*s+(s-a)/2,o=(t-i)/r*150,l=Math.max(3,o),c=200-l,p=(t-i)/r;return`\n                        <rect x="${n}" y="${c}" width="${a}" height="${l}" \n                              fill="url(#${d})" \n                              stroke="rgba(255,255,255,0.1)" stroke-width="0.5"\n                              rx="1" opacity="${.6+.4*p}">\n                            <animate attributeName="height" values="0;${l}" dur="0.8s" begin="${.03*e}s"/>\n                            <animate attributeName="y" values="200;${c}" dur="0.8s" begin="${.03*e}s"/>\n                        </rect>\n                        \n                        \x3c!-- Tooltip with actual values --\x3e\n                        <rect x="${n-1}" y="50" width="${a+2}" height="150" \n                              fill="transparent">\n                            <title>Period ${e+1}&#10;Volume: ${this.formatVolume(t)}&#10;Relative: ${(100*p).toFixed(1)}% of max</title>\n                        </rect>\n                    `})).join("")}\n                \n                <text x="400" y="25" fill="rgba(255,255,255,0.8)" font-size="14" font-weight="bold" \n                      text-anchor="middle" font-family="Inter, sans-serif">\n                      Live Volume Analysis (${n.length} data points)\n                </text>\n                \n                \x3c!-- Real-time volume statistics --\x3e\n                <text x="750" y="240" fill="rgba(255,255,255,0.5)" font-size="10" \n                      text-anchor="end" font-family="monospace">\n                      Updated: ${l} | Avg: ${this.formatVolume(n.reduce(((t,e)=>t+e),0)/n.length)}\n                </text>\n                \n                \x3c!-- Live data indicator --\x3e\n                <circle cx="780" cy="20" r="3" fill="#10b981" opacity="0.9">\n                    <animate attributeName="opacity" values="0.9;0.3;0.9" dur="2s" repeatCount="indefinite"/>\n                </circle>\n                <text x="765" y="25" fill="#10b981" font-size="10" font-family="monospace" text-anchor="end">LIVE</text>\n            </svg>\n        `}generatePriceHistory(t,e=30){const n=[];let o=t;for(let i=e;i>0;i--){const r=i/e;o*=.08*Math.sin(r*Math.PI*2)+.03*Math.sin(r*Math.PI*8)+.06*(Math.random()-.5)+.04*(Math.random()-.5)*(1-r)+1;const a=.6*t,s=1.7*t;o=Math.max(a,Math.min(s,o)),n.unshift(o)}const i=Math.max(3,Math.floor(.1*n.length)),r=t/n[n.length-1];for(let t=Math.max(0,n.length-i);t<n.length;t++){const e=1+(r-1)*((t-(n.length-i))/i)*.7;n[t]=n[t]*e}return n[n.length-1]=t,console.log(`📈 Generated price history: ${n.length} points, range: $${Math.min(...n).toFixed(2)} - $${Math.max(...n).toFixed(2)}`),n}generateVolumeHistory(t,e=30){const n=[];for(let o=e;o>0;o--){const i=o/e;let r=t*(.3*Math.sin(i*Math.PI*4)+(Math.random()<.1?.5*Math.random():0)+.2*(Math.random()-.5)+1);r=Math.max(.2*t,Math.min(3*t,r)),n.unshift(r)}for(let e=Math.max(0,n.length-3);e<n.length;e++){const o=(e-(n.length-3))/2,i=n[e];n[e]=i+(t-i)*o*.6}return n[n.length-1]=t,n}formatPrice(t){return t>=1e3?t.toLocaleString("en-US",{minimumFractionDigits:2,maximumFractionDigits:2}):t>=1?t.toFixed(2):t>=.01?t.toFixed(4):t.toFixed(6)}formatMarketCap(t){return t>=1e12?`${(t/1e12).toFixed(2)}T`:t>=1e9?`${(t/1e9).toFixed(1)}B`:t>=1e6?`${(t/1e6).toFixed(0)}M`:`${(t/1e3).toFixed(0)}K`}formatVolume(t){return t>=1e9?`${(t/1e9).toFixed(1)}B`:t>=1e6?`${(t/1e6).toFixed(0)}M`:`${(t/1e3).toFixed(0)}K`}refreshAnalysis(){console.log("🔄 Manual refresh - resyncing with clock"),this.startSyncedCountdown(),this.loadData()}destroy(){this.countdownInterval&&clearInterval(this.countdownInterval),this.modalUpdateInterval&&clearInterval(this.modalUpdateInterval)}}let e;window.refreshAnalysis=function(){e&&e.refreshAnalysis()},window.filterByAnalysis=function(t){e&&e.filterByAnalysis(t)},window.handleSortChange=function(){e&&e.handleSortChange()},document.addEventListener("DOMContentLoaded",(()=>{e=new t,e.init()}))})();